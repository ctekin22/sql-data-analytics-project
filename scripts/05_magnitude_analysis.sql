--------------------------------------------------------------------------------------------------------------------
-- Step 5: Magnitude Analysis
-- Compare the measure values by categories
-- It helps undurstand the importance of different catagories
-- Aggregated Measure by Dimention
--------------------------------------------------------------------------------------------------------------------
-- Find total customers by countries
SELECT country, COUNT(customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY country
ORDER BY total_customers DESC;

-- Find total customers by gender
SELECT gender, COUNT(customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY gender
ORDER BY total_customers DESC;

-- Find total products by category
SELECT category, COUNT(product_key) AS total_products
FROM gold.dim_products
GROUP BY category
ORDER BY total_products DESC;

-- What is the average costs in each category
SELECT category, AVG(cost) AS avg_cost
FROM gold.dim_products
GROUP BY category
ORDER BY avg_cost DESC;

-- What is the total revenue generated for each category
-- revenue is fact, category is dimention
-- Use fact table as a main table 
SELECT p.category, SUM(s.sales_amount) AS total_revenue
FROM gold.fact_sales s
LEFT JOIN gold.dim_products p  ON p.product_key = s.product_key
GROUP BY p.category
ORDER BY total_revenue DESC;


-- Find total revenue is generated by each customer 
SELECT 
    c.customer_key, 
    c.first_name, 
    c.last_name, 
    SUM(s.sales_amount) AS total_revenue
FROM gold.fact_sales s
LEFT JOIN gold.dim_customers c 
ON s.customer_key = c.customer_key
GROUP BY  
    c.customer_key, 
    c.first_name, 
    c.last_name
ORDER BY total_revenue DESC;


-- What is the distribution of sold items across countries
-- When we have only few unique categories for dimention, it is called Low Cardinality Dimension.
-- When we have large number of unique categories for dimention, it is called High Cardinality Dimension.
SELECT 
    c.country, 
    SUM(s.quantity) AS total_sold_quantity
FROM gold.fact_sales s
LEFT JOIN gold.dim_customers c 
ON s.customer_key = c.customer_key
GROUP BY c.country
ORDER BY total_sold_quantity DESC
